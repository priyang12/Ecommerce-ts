{"version":3,"file":"static/js/745.871563cd.chunk.js","mappings":"6OAEaA,EAAwBC,EAAAA,GAAAA,IAAH,mbAsBrBC,EAAcD,EAAAA,GAAAA,IAAH,qvBA4CXE,EAAqBF,EAAAA,GAAAA,IAAH,qdAqBlBG,EAAqBH,EAAAA,GAAAA,IAAH,woBA+BlBI,EAAwBJ,EAAAA,GAAAA,IAAH,mKAMrBK,EAAiBL,EAAAA,GAAAA,OAAH,ia,SCrD3B,EA/Dc,SAAC,GAQR,IAPLM,EAOI,EAPJA,MACAC,EAMI,EANJA,OACAC,EAKI,EALJA,SAMMC,EAAoB,IAAXF,GAAsB,KAC/BG,GAAMC,EAAAA,EAAAA,IAAQF,GACpB,OACE,iBACEC,IAAKA,EACLE,UAAU,QACVC,YAAa,SAACC,GACRA,EAAEC,QAAQC,QAAU,IACP,IAAXT,GACFC,EAAS,CAAES,KAAM,UAEH,IAAZV,GACFC,EAAS,CAAES,KAAM,WAIvBC,MAAO,CAEL,WAAYX,EACZ,QAAoB,IAAXA,EAAe,EAAIA,EAAS,EAAI,GAAK,GAhBlD,WAmBE,SAACH,EAAD,CACEc,MAAO,CACLC,gBAAgB,QAAD,OAAUb,EAAMc,MAAhB,UAGnB,UAAClB,EAAD,CACEgB,MAAO,CACLC,gBAAgB,QAAD,OAAUb,EAAMc,MAAhB,MACfC,QAASZ,EAAS,EAAI,IAH1B,WAOE,UAACN,EAAD,CACEe,MAAO,CACLG,QAASZ,EAAS,EAAI,GAF1B,WAKE,eAAIG,UAAU,aAAd,SAA4BN,EAAMgB,SAClC,cAAGV,UAAU,mBAAb,SAAiCN,EAAMiB,kBAEzC,SAAClB,EAAD,CACEa,MAAO,CACLM,QAASf,EAAS,QAAU,QAFhC,UAKE,SAAC,KAAD,CAAMgB,GAAE,mBAAcnB,EAAMoB,KAA5B,gCC3DJC,EAAe,CACnBC,WAAY,GAmDd,EAhDwC,SAAC,GAAiC,IAArBC,EAAoB,EAA9BC,SAiBzC,GAA0BC,EAAAA,EAAAA,aAhBJ,SAACC,EAAYC,GACjC,MAAmB,SAAfA,EAAMhB,MACD,kBACFe,GADL,IAEEJ,WACuB,IAArBI,EAAMJ,WAAmBC,EAASb,OAAS,EAAIgB,EAAMJ,WAAa,IAGrD,SAAfK,EAAMhB,MACD,kBACFe,GADL,IAEEJ,YAAaI,EAAMJ,WAAa,GAAKC,EAASb,cAHlD,IAQkDW,GAApD,eAAOK,EAAP,KAAcxB,EAAd,KAQA,OAPA0B,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,aAAY,WAC3B5B,EAAS,CAAES,KAAM,WAChB,KACH,OAAO,kBAAMoB,cAAcF,MAC1B,KAGD,SAACpC,EAAD,WACE,UAACE,EAAD,YACE,mBAAQqC,QAAS,kBAAM9B,EAAS,CAAES,KAAM,UAAxC,UACE,cAAGL,UAAU,0BAGdiB,EAASU,KAAI,SAACjC,EAAYkC,GACzB,IAAIjC,EAASyB,EAAMJ,WAAaY,EAGhC,OACE,SAAC,EAAD,CAAOlC,MAAOA,EAAOC,OAAQA,EAAgBC,SAAUA,GAAbgC,OAG9C,mBAAQF,QAAS,kBAAM9B,EAAS,CAAES,KAAM,UAAxC,UACE,cAAGL,UAAU","sources":["Components/StyledComponents/Styledslides.ts","Components/Slide.tsx","Components/Carousel.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledSlidesContainer = styled.div`\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n\n  .active {\n    --x: calc(var(--px) - 0.5);\n    --y: calc(var(--py) - 0.5);\n    opacity: 1;\n\n    transform: perspective(1000px);\n\n    &:hover {\n      transition: none;\n      transform: perspective(1000px) rotateY(calc(var(--x) * 45deg))\n        rotateX(calc(var(--y) * -45deg));\n    }\n  }\n`;\n\nexport const StyledSlide = styled.div`\n  display: grid;\n  > .slide {\n    grid-area: 1 / -1;\n  }\n\n  > button {\n    cursor: pointer;\n    appearance: none;\n    border-radius: 50%;\n    border: none;\n    color: black;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    font-size: 1.5rem;\n    width: 5rem;\n    height: 5rem;\n    transition: opacity 0.3s;\n    opacity: 0.7;\n    z-index: 5;\n    top: 30rem;\n    &:hover {\n      opacity: 1;\n    }\n    &:focus {\n      outline: none;\n    }\n    &:first-child {\n      left: 10%;\n    }\n    &:last-child {\n      right: 10%;\n    }\n    @media (max-width: 568px) {\n      display: none;\n      width: 3rem;\n      height: 3rem;\n      top: 52%;\n    }\n  }\n`;\n\nexport const StyledSlideContent = styled.div`\n  width: 40vw;\n  height: 40vw;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  transition: transform 0.5s ease-in-out;\n  opacity: 0.7;\n  display: grid;\n  align-content: center;\n\n  transform-style: preserve-3d;\n  transform: perspective(1000px) translateX(calc(100% * var(--offset)))\n    rotateY(calc(-45deg * var(--dir)));\n  &:hover {\n    > button {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const StyledContentInner = styled.div`\n  transform-style: preserve-3d;\n  transform: translateZ(2rem);\n  transition: opacity 0.3s linear;\n  text-shadow: 0 0.1rem 1rem #000;\n  opacity: 0;\n  text-align: center;\n  .slideTitle {\n    font-size: 2rem;\n    font-weight: normal;\n    letter-spacing: 0.2ch;\n    text-transform: uppercase;\n    margin: 0;\n  }\n  .slideDescription {\n    margin: 0.5em;\n    margin-bottom: 1em;\n    font-size: 2rem;\n    letter-spacing: 0.2ch;\n  }\n  @media (max-width: 1028px) {\n    .slideDescription {\n      font-size: 1.5rem;\n    }\n  @media (max-width: 768px) {\n    .slideDescription {\n      display: none;\n    }\n  }\n`;\n\nexport const StyledSlideBackground = styled.div`\n  transition: opacity 0.3s linear, transform 0.3s ease-in-out;\n  pointer-events: none;\n  transform: translateX(calc(10% * var(--dir)));\n`;\n\nexport const StyledShowMore = styled.button`\n  opacity: 0;\n  cursor: pointer;\n  appearance: none;\n  text-align: center;\n  font-family: \"Arial\", sans-serif;\n  padding: 0.5em;\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  background: #e65d5d;\n  border: none;\n  color: white;\n  font-size: 2.5rem;\n  transition: opacity 0.3s;\n  &:focus {\n    outline: none;\n  }\n  @media (max-width: 768px) {\n    font-size: 1rem;\n  }\n`;\n","import { Dispatch } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTilt } from \"../Utils/CustomHooks\";\nimport {\n  StyledContentInner,\n  StyledSlideBackground,\n  StyledSlideContent,\n  StyledShowMore,\n} from \"./StyledComponents/Styledslides\";\n\nconst Slide = ({\n  slide,\n  offset,\n  dispatch,\n}: {\n  slide: any;\n  offset: number;\n  dispatch: Dispatch<any>;\n}) => {\n  const active = offset === 0 ? true : null;\n  const ref = useTilt(active);\n  return (\n    <div\n      ref={ref}\n      className=\"slide\"\n      onTouchMove={(e) => {\n        if (e.touches.length >= 1) {\n          if (offset === 1) {\n            dispatch({ type: \"NEXT\" });\n          }\n          if (offset === -1) {\n            dispatch({ type: \"PREV\" });\n          }\n        }\n      }}\n      style={{\n        // @ts-ignore\n        \"--offset\": offset,\n        \"--dir\": offset === 0 ? 0 : offset > 0 ? 1 : -1,\n      }}\n    >\n      <StyledSlideBackground\n        style={{\n          backgroundImage: `url('${slide.image}')`,\n        }}\n      />\n      <StyledSlideContent\n        style={{\n          backgroundImage: `url('${slide.image}')`,\n          opacity: active ? 1 : 0.7,\n        }}\n        // className={active ? \"active\" : \"\"}\n      >\n        <StyledContentInner\n          style={{\n            opacity: active ? 1 : 0,\n          }}\n        >\n          <h2 className=\"slideTitle\">{slide.title}</h2>\n          <p className=\"slideDescription\">{slide.description}</p>\n        </StyledContentInner>\n        <StyledShowMore\n          style={{\n            display: active ? \"block\" : \"none\",\n          }}\n        >\n          <Link to={`/product/${slide._id}`}>Show More</Link>\n        </StyledShowMore>\n      </StyledSlideContent>\n    </div>\n  );\n};\n\nexport default Slide;\n","import { FC, useEffect, useReducer } from \"react\";\nimport Slide from \"./Slide\";\nimport {\n  StyledSlide,\n  StyledSlidesContainer,\n} from \"./StyledComponents/Styledslides\";\n\nconst initialState = {\n  slideIndex: 0,\n};\n\nconst Carousel: FC<{ products: any }> = ({ products: Products }: any) => {\n  const slidesReducer = (state: any, event: any) => {\n    if (event.type === \"NEXT\") {\n      return {\n        ...state,\n        slideIndex:\n          state.slideIndex === 0 ? Products.length - 1 : state.slideIndex - 1,\n      };\n    }\n    if (event.type === \"PREV\") {\n      return {\n        ...state,\n        slideIndex: (state.slideIndex + 1) % Products.length,\n      };\n    }\n  };\n\n  const [state, dispatch] = useReducer(slidesReducer, initialState);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch({ type: \"NEXT\" });\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <StyledSlidesContainer>\n      <StyledSlide>\n        <button onClick={() => dispatch({ type: \"PREV\" })}>\n          <i className=\"fas fa-chevron-left\"></i>\n        </button>\n\n        {Products.map((slide: any, i: number) => {\n          let offset = state.slideIndex - i;\n          // New Effect\n          // if (offset < 0) offset += Products.length;\n          return (\n            <Slide slide={slide} offset={offset} key={i} dispatch={dispatch} />\n          );\n        })}\n        <button onClick={() => dispatch({ type: \"NEXT\" })}>\n          <i className=\"fas fa-chevron-right\"></i>\n        </button>\n      </StyledSlide>\n    </StyledSlidesContainer>\n  );\n};\n\nexport default Carousel;\n"],"names":["StyledSlidesContainer","styled","StyledSlide","StyledSlideContent","StyledContentInner","StyledSlideBackground","StyledShowMore","slide","offset","dispatch","active","ref","useTilt","className","onTouchMove","e","touches","length","type","style","backgroundImage","image","opacity","title","description","display","to","_id","initialState","slideIndex","Products","products","useReducer","state","event","useEffect","interval","setInterval","clearInterval","onClick","map","i"],"sourceRoot":""}